(define (new-extjs-app d od)
 (display 1)
)

(define (new-extjs-model d od)
  (let* ((value (oret:value d)) 
         (opt-base (get-opt-item "--base" od))
         (base (if (string=? opt-base "") "Ext.data.Model" opt-base))
         (opt-fields (get-opt-item "--fields" od))
         (field (if (string=? opt-fields "") "id:int" opt-fields))
         )
    (run (sencha generate model -b ,base -f ,field ,value))
    ))

(define (new-extjs-controller d od)
  (let* ((value (oret:value d)) 
         )
    (run (sencha generate controller ,value))
    ))

(define (new-extjs-view d od)
  (let* ((value (oret:value d)) 
         (opt-base (get-opt-item "--base" od))
         (base (if (string=? opt-base "") "Ext.panel.Panel" opt-base))
         )
    (run (sencha generate view -b ,base ,value))
    ))

(define (watch-app d od)
  (run (sencha app watch)))

(define (sencha d od)
  (get-opt 
    `(
      (--new-app      -n|s|t " new extjs app ex: sen -n [app]                 " , new-extjs-app)
      (--new-m        -m|s|t " new m ex: sen -m User [-b MyApp.Base -f id:int] " , new-extjs-model)
      (--new-v        -v|s|t " new v ex: sen -v login.Login [-b Ext.window.Window] " , new-extjs-view)
      (--new-c        -c|s|t " new c ex: sen -c Root                          " , new-extjs-controller)
      (--watch        -w|s|t " watch the app                                  " , watch-app)
      (--base         -b|s|  " base class                                     " #f)
      (--fields       -f|s|  " fields for model                               " #f)
      (--debug        -d||f  " debug                                          " #f)
      (--default      -      " default action                                 " , get-opt-usage)
      (--help         -h     " bprint this usage message                      " , get-opt-usage))))
